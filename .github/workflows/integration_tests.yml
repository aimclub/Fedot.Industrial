name: Integration Tests

on:
  schedule:
    - cron: '0 12 * * 3'
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        python-version: ['3.10', '3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential git

#      - name: Cache Poetry virtualenv
#        uses: actions/cache@v4
#        with:
#          path: ~/.local/share/poetry/virtualenvs/  # Cache Poetry virtualenvs
#          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml') }}  # Cache key based on project dependencies

#      - name: Install Poetry
#        uses: snok/install-poetry@v1
#        with:
#          version: 1.8.2  # Specify your desired Poetry version (pin it for stability)
#          virtualenvs-create: true
#          virtualenvs-in-project: true  # Create venv within project directory
#
#      - name: Install dependencies
#        run: |
#          poetry install --no-root
#          poetry install --no-root --extras "all"
      - name: PIP venv
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          pip3 install pytest
          pip3 install -e . --force-reinstall
          pip3 install pytest-cov

      - name: Run tests
        run: poetry run pytest --cov=fedot_ind tests/integration -vvv --cov-report=xml

      - name: Codecov-coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: integrationtests
