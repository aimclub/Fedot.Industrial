name: Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    strategy:
      matrix:
        python-version: [3.9, '3.10', '3.11']

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.local/share/poetry/virtualenvs/  # Cache Poetry virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('pyproject.toml') }}  # Cache key based on project dependencies

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.8.2  # Specify your desired Poetry version (pin it for stability)
          virtualenvs-create: true
          virtualenvs-in-project: true  # Create venv within project directory

      - name: Install dependencies
        run: poetry install

      - name: Run tests with pytest
        run: poetry run pytest --cov=fedot_ind --cov-report xml:coverage.xml tests/unit -vvv

      - name: Codecov-coverage
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
